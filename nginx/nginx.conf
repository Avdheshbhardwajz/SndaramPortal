# Optimized and Secure Nginx Configuration

user  www-data;  # Use nginx user for running processes
worker_processes  auto;  # Auto-detect CPU cores for better performance

error_log  /var/log/nginx/error.log warn;  # Error log configuration
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;  # Increase for more simultaneous connections
    multi_accept on;  # Accept multiple connections at once
    use epoll;  # Use epoll on Linux for scalability
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;  # Reduce packet latency for large files
    tcp_nodelay     on;  # Disable Nagle's algorithm for small requests

    keepalive_timeout  65;
    keepalive_requests 100;  # Max keep-alive requests per connection

    client_max_body_size 10M;  # Limit request body size to 10MB
    client_body_buffer_size 128k;  # Buffer size for request body

    # Enable gzip compression for text-based responses
    gzip on;
    gzip_vary on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_types text/css application/javascript application/json application/xml text/plain application/font-woff application/font-woff2;

    # Set up security headers
    add_header X-Frame-Options "SAMEORIGIN" always;  # Prevent clickjacking
    add_header X-Content-Type-Options "nosniff" always;  # Prevent MIME type sniffing
    add_header X-XSS-Protection "1; mode=block" always;  # XSS protection
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self';" always;  # Basic Content-Security-Policy
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;  # Enforce HTTPS

    # Enable rate limiting for potential DoS attacks
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
    
    # SSL settings (if HTTPS is enabled)
    ssl_protocols TLSv1.2 TLSv1.3;  # Only use secure protocols
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    ssl_certificate /etc/ssl/certs/sundarammutual.crt;
    ssl_certificate_key /etc/ssl/private/sundarammutual.key;
    server {
        listen 80;
        server_name misadmindev.sundarammutual.com;
        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        
        server_name misadmindev.sundarammutual.com;

        
        
        
        root /var/www/html/dev;  # Path to your React build folder
        index index.html;

        # Serve React frontend
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Forward API requests to the backend
        location /api/ {
            limit_req zone=one burst=5 nodelay;
            proxy_pass http://localhost:5000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Hardened proxy settings for performance and security
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 32 16k;
            proxy_busy_buffers_size 64k;
            proxy_read_timeout 90;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
        }

        # Rate limiting for /api/ to prevent abuse
        

        # Deny access to sensitive files
        location ~ /\.ht {
            deny all;
        }
    }

    server {
        listen 80;
        server_name misadminuat.sundarammutual.com;
        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        
        server_name misadminuat.sundarammutual.com;
        
        root /var/www/html/uat;  # Path to your React build folder
        index index.html;

        # Serve React frontend
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Forward API requests to the backend
        location /api/ {
            limit_req zone=one burst=5 nodelay;
            proxy_pass http://localhost:5001/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Hardened proxy settings for performance and security
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 32 16k;
            proxy_busy_buffers_size 64k;
            proxy_read_timeout 90;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
        }

        # Rate limiting for /api/ to prevent abuse
        

        # Deny access to sensitive files
        location ~ /\.ht {
            deny all;
        }
    }

    server {
        listen 80;
        server_name misadmin.sundarammutual.com;
        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        server_name misadmin.sundarammutual.com;
        
        root /var/www/html/prd;  # Path to your React build folder
        index index.html;

        # Serve React frontend
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Forward API requests to the backend
        location /api/ {
            limit_req zone=one burst=5 nodelay;
            proxy_pass http://localhost:5002/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Hardened proxy settings for performance and security
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 32 16k;
            proxy_busy_buffers_size 64k;
            proxy_read_timeout 90;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
        }

        # Rate limiting for /api/ to prevent abuse
        

        # Deny access to sensitive files
        location ~ /\.ht {
            deny all;
        }
    }

    # Additional security for server tokens (do not show Nginx version)
    server_tokens off;
}
